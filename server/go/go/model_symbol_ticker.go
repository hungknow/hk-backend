/*
 * Trading API
 *
 * This API allow to interact with the trading system. 
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package hktrading_server


import (
	"fmt"
)



type SymbolTicker string

// List of SymbolTicker
const (
	MOCKXAUUSD SymbolTicker = "MOCK:XAUUSD"
)

// AllowedSymbolTickerEnumValues is all the allowed values of SymbolTicker enum
var AllowedSymbolTickerEnumValues = []SymbolTicker{
	"MOCK:XAUUSD",
}

// validSymbolTickerEnumValue provides a map of SymbolTickers for fast verification of use input
var validSymbolTickerEnumValues = map[SymbolTicker]struct{}{
	"MOCK:XAUUSD": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SymbolTicker) IsValid() bool {
	_, ok := validSymbolTickerEnumValues[v]
	return ok
}

// NewSymbolTickerFromValue returns a pointer to a valid SymbolTicker
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSymbolTickerFromValue(v string) (SymbolTicker, error) {
	ev := SymbolTicker(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for SymbolTicker: valid values are %v", v, AllowedSymbolTickerEnumValues)
	}
}



// AssertSymbolTickerRequired checks if the required fields are not zero-ed
func AssertSymbolTickerRequired(obj SymbolTicker) error {
	return nil
}

// AssertSymbolTickerConstraints checks if the values respects the defined constraints
func AssertSymbolTickerConstraints(obj SymbolTicker) error {
	return nil
}
