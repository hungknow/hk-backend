/*
 * Trading API
 *
 * This API allow to interact with the trading system.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package hktrading_server

import (
	"context"
	"errors"
	"fmt"
	"net/http"
)

// DefaultAPIService is a service that implements the logic for the DefaultAPIServicer
// This service should implement the business logic for every endpoint for the DefaultAPI API.
// Include any external packages or services that will be required by this service.
type DefaultAPIService struct {
}

// NewDefaultAPIService creates a default api service
func NewDefaultAPIService() DefaultAPIServicer {
	return &DefaultAPIService{}
}

// GetCandles - Get the list of candles
func (s *DefaultAPIService) GetCandles(ctx context.Context, symbol SymbolTicker, resolution Resolution, from int32, to int32) (ImplResponse, error) {
	// TODO - update GetCandles with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	fmt.Printf("This is my implementation")

	// TODO: Uncomment the next line to return response Response(200, Candles{}) or use other options such as http.Ok ...
	// return Response(200, Candles{}), nil

	// TODO: Uncomment the next line to return response Response(404, HkError{}) or use other options such as http.Ok ...
	// return Response(404, HkError{}), nil

	// TODO: Uncomment the next line to return response Response(500, HkError{}) or use other options such as http.Ok ...
	// return Response(500, HkError{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetCandles method not implemented")
}
